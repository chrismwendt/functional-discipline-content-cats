(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     89945,       2615]
NotebookOptionsPosition[     82848,       2372]
NotebookOutlinePosition[     84601,       2419]
CellTagsIndexPosition[     84558,       2416]
WindowTitle->Cones and Limits - Wolfram Mathematica
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[" ", "TutorialColorBar",
 CellMargins->{{Inherited, Inherited}, {-5, 0}}],

Cell[TextData[{
 ButtonBox["WildCats",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->"paclet:WildCats/guide/WildCats"],
 StyleBox[" > ", "LinkTrailSeparator"]
}], "LinkTrail"],

Cell[BoxData[GridBox[{
   {Cell["WILD CATS TUTORIAL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox["\<\"More About \[RightGuillemet]\"\>",
        StripOnInput->False], {"\<\"WildCats Guide\"\>":>
       Documentation`HelpLookup["paclet:WildCats/guide/WildCats"]},
       Appearance->None,
       MenuAppearance->Automatic]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox["\<\"URL \[RightGuillemet]\"\>",
        StripOnInput->False], {"\<\"WildCats/tutorial/Cones and Limits\"\>":>
       None, "\<\"Copy Mathematica url\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["WildCats/tutorial/Cones and Limits"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web url\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/mathematica/WildCats/tutorial/\
Cones and Limits.html"], StandardForm]], "Input", TextClipboardType -> 
              "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web url\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
            "http://reference.wolfram.com/mathematica/", 
             "WildCats/tutorial/Cones and Limits", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1],

Cell[CellGroupData[{

Cell["Cones and Limits", "Title",
 CellID->509267359],

Cell[TextData[{
 "This terminates the current ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " session and starts a new clean session"
}], "Text",
 CellID->12172402],

Cell["(recommended for troubleshooting)", "Text",
 CellID->121457497],

Cell[BoxData["Quit"], "Input",
 CellLabel->"In[1]:=",
 CellID->309037897],

Cell["This loads the package:", "Text",
 CellID->1825449234],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<WildCats`\>\"", "]"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->339579782],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
      "\"Loaded WildCats  version \"","\"0.70.0\"","\", \"",RowBox[{"{", 
         RowBox[{"2014", ",", "1", ",", "31"}], "}"}]},
      "Row",
      DisplayFunction->(
       RowBox[{#, "\[InvisibleSpace]", #2, "\[InvisibleSpace]", #3, 
         "\[InvisibleSpace]", #4}]& ),
      InterpretationFunction->(RowBox[{"Row", "[", 
         RowBox[{"{", 
           RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], "]"}]& )]},
    {"\<\"Copyright (C) 2009-2013, Alessandro Stecchina,\"\>"},
    {"\<\"under the General Public License.\"\>"},
    {"\<\" \"\>"},
    {"\<\"Loaded Notation package and palette\"\>"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellLabel->"During evaluation of In[1]:=",
 CellID->130510647]
}, Open  ]],

Cell[CellGroupData[{

Cell["Defining Cones", "Section",
 CellID->139694517],

Cell["\<\
Cones are natural transformations where the domain functor is a constant \
functor.\
\>", "Text",
 CellID->1534169418],

Cell["Cones are easily displayed with ConePlot.", "Text",
 CellID->64255456],

Cell[BoxData[GridBox[{
   {
    RowBox[{"ConePlot", "[", 
     RowBox[{
      StyleBox["nt",
       FontSlant->"Italic"], ",", 
      RowBox[{"{", 
       RowBox[{
        StyleBox["vx",
         FontSlant->"Italic"], ",", 
        StyleBox["vy",
         FontSlant->"Italic"]}], "}"}], ",", 
      StyleBox["gr",
       FontSlant->"Italic"], ",", 
      StyleBox["opts",
       FontSlant->"Italic"]}], "]"}], 
    RowBox[{
    "standard", " ", "plot", " ", "of", " ", "the", " ", "cone", " ", "with", 
     " ", "vertex", " ", "in", " ", 
     RowBox[{"{", 
      RowBox[{"vx", ".", "vy"}], "}"}], " ", "and", " ", "natural", " ", 
     "transformation", " ", 
     StyleBox["nt",
      FontSlant->"Italic"], " ", "using", " ", 
     StyleBox["gr",
      FontSlant->"Italic"], " ", "as", " ", "an", " ", 
     RowBox[{"example", "."}]}]}
  }]], "DefinitionBox",
 CellID->2096742444],

Cell["ConePlot.", "Caption",
 CellID->1891092685],

Cell["\<\
Just for aesthetic reasons, we can create a custom notation, so that the \
index becomes a subscript\
\>", "Text",
 CellID->880910032],

Cell[BoxData[
 RowBox[{"Notation", "[", 
  RowBox[{
   TemplateBox[{SubscriptBox["j", "n_"]},
    "NotationTemplateTag"], " ", "\[DoubleLongLeftRightArrow]", " ", 
   TemplateBox[{RowBox[{"j", "[", "n_", "]"}]},
    "NotationTemplateTag"]}], "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->195599976],

Cell[BoxData[
 RowBox[{"Notation", "[", 
  RowBox[{
   RowBox[{
    TemplateBox[{SubscriptBox["j", "n_"]},
     "NotationTemplateTag"], " ", "\[DoubleLongLeftRightArrow]", " ", 
    TemplateBox[{RowBox[{"j", "[", "n_", "]"}]},
     "NotationTemplateTag"]}], ",", 
   RowBox[{"WorkingForm", " ", "\[Rule]", " ", "TraditionalForm"}]}], 
  "]"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->118135242],

Cell["\<\
Define two empty categories (do not fill any object/morphism in the dialog \
box).\
\>", "Text",
 CellID->26284519],

Cell[BoxData[{
 RowBox[{"DefCategory", "[", "\[DoubleStruckCapitalJ]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"DefCategory", "[", "\[DoubleStruckCapitalC]", "]"}]}], "Input",
 CellLabel->"In[3]:=",
 CellID->463198528],

Cell["\[DoubleStruckCapitalJ] is called index category. ", "Text",
 CellID->409587394],

Cell["\<\
It is usually small, sometimes even finite. We assume \[DoubleStruckCapitalJ] \
is small.\
\>", "Text",
 CellID->273776],

Cell[BoxData[
 RowBox[{
  RowBox[{"SmallCatQ", "[", "\[DoubleStruckCapitalJ]", "]"}], ":=", "True", 
  "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"better", " ", "to", " ", "use", " ", "cat", " ", "properties"}], 
   " ", "*)"}]}]], "Input",
 CellLabel->"In[5]:=",
 CellID->574245174],

Cell["Define a functor F from \[DoubleStruckCapitalJ] to \
\[DoubleStruckCapitalC]", "Text",
 CellID->121368428],

Cell[BoxData[
 RowBox[{"DefFunctor", "[", 
  RowBox[{
  "F", ",", "\[DoubleStruckCapitalJ]", ",", "\[DoubleStruckCapitalC]"}], 
  "]"}]], "Input",
 CellLabel->"In[6]:=",
 CellID->837220],

Cell[TextData[{
 "Define objects ",
 Cell[BoxData[
  SubscriptBox["j", "1"]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  SubscriptBox["j", "2"]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["j", "3"], TraditionalForm]]],
 " in ",
 "\[DoubleStruckCapitalJ]"
}], "Text",
 CellID->731935552],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DefObject", "[", 
    RowBox[{"#", ",", "\[DoubleStruckCapitalJ]"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["j", "1"], ",", 
    SubscriptBox["j", "2"], ",", 
    SubscriptBox["j", "3"]}], "}"}], " "}]], "Input",
 CellLabel->"In[7]:=",
 CellID->104261775],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Null", ",", "Null", ",", "Null"}], "}"}]], "Output",
 ImageSize->{124, 15},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[7]=",
 CellID->122344855]
}, Open  ]],

Cell["Define object c in \[DoubleStruckCapitalC]", "Text",
 CellID->689126331],

Cell[BoxData[
 RowBox[{"DefObject", "[", 
  RowBox[{"c", ",", "\[DoubleStruckCapitalC]"}], "]"}]], "Input",
 CellLabel->"In[8]:=",
 CellID->130948741],

Cell["Define various morphisms in \[DoubleStruckCapitalJ]", "Text",
 CellID->191045113],

Cell[BoxData[{
 RowBox[{"DefMorphism", "[", 
  RowBox[{"f", ",", 
   SubscriptBox["j", "1"], ",", 
   SubscriptBox["j", "2"], ",", "\[DoubleStruckCapitalJ]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"DefMorphism", "[", 
  RowBox[{"h", ",", 
   SubscriptBox["j", "3"], ",", 
   SubscriptBox["j", "2"], ",", "\[DoubleStruckCapitalJ]"}], "]"}]}], "Input",
 CellLabel->"In[9]:=",
 CellID->78288731],

Cell[TextData[{
 "And finally a natural transformation \[Nu] between functors ",
 Cell[BoxData[
  RowBox[{
   SubsuperscriptBox["\[CapitalDelta]", "\[DoubleStruckCapitalC]", 
    "\[DoubleStruckCapitalJ]"], "[", "c", "]"}]]],
 " and F."
}], "Text",
 CellID->29382298],

Cell["This is the same as a cone from c to F", "Text",
 CellID->239000443],

Cell[BoxData[
 RowBox[{"DefNaturalTransformation", "[", 
  RowBox[{"\[Nu]", ",", 
   RowBox[{
    SubsuperscriptBox["\[CapitalDelta]", "\[DoubleStruckCapitalC]", 
     "\[DoubleStruckCapitalJ]"], "[", "c", "]"}], ",", "F"}], "]"}]], "Input",
 CellLabel->"In[11]:=",
 CellID->39546289],

Cell["Let's consider a diagram in \[DoubleStruckCapitalJ]", "Text",
 CellID->1035064667],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gr1", "=", 
  RowBox[{"CategoryPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"DC", "[", 
       RowBox[{"f", ",", "\[DoubleStruckCapitalJ]"}], "]"}], ",", 
      RowBox[{"DC", "[", 
       RowBox[{"h", ",", "\[DoubleStruckCapitalJ]"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["j", "1"], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{
       SubscriptBox["j", "2"], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], ",", 
      RowBox[{
       SubscriptBox["j", "3"], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}]}], "}"}]}], "]"}]}]], "Input",
 CellLabel->"In[12]:=",
 CellID->24129722],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       $CellContext`j[1], 
       $CellContext`j[2], 
       $CellContext`j[3]}, {{{1, 2}, {3, 2}}, Null}, {
      EdgeLabels -> {DirectedEdge[
           $CellContext`j[1], 
           $CellContext`j[2]] -> $CellContext`f, DirectedEdge[
           $CellContext`j[3], 
           $CellContext`j[2]] -> $CellContext`h}, EdgeLabelStyle -> {
         Directive[Background -> GrayLevel[1]]}, EdgeShapeFunction -> {{Black, 
          Arrow[#, {0.1, 0.1}]}& }, ImagePadding -> 20, ImageSize -> All, 
       VertexCoordinates -> {{0., 0.}, {1., 0.}, {1., 1.}}, VertexLabels -> {
         Placed["Name", Center]}, VertexShapeFunction -> {None}, VertexStyle -> {
         Directive[
          EdgeForm[], 
          GrayLevel[1]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
    GraphicsGroupBox[{{
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{0., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$1"], 
         InsetBox[
          FormBox[
           SubscriptBox["j", "1"], TraditionalForm], 
          DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{1., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$2"], 
         InsetBox[
          FormBox[
           SubscriptBox["j", "2"], TraditionalForm], 
          DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{1., 1.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$3"], 
         InsetBox[
          FormBox[
           SubscriptBox["j", "3"], TraditionalForm], 
          DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"]}, {
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 0.}, {1., 0.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$1"], 
        InsetBox[
         FormBox[
          StyleBox["f", 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$1", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{1., 1.}, {1., 0.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$2"], 
        InsetBox[
         FormBox[
          StyleBox["h", 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$2", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}}}], Typeset`data}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      2, Typeset`graph, Typeset`boxes], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {}},
      ImageSizeCache->{{17.793478745318854`, 
       195.00652125468037`}, {-92.10652125468076, 88.10652125468081}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{Typeset`data}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  ImagePadding->20,
  ImageSize->{212.79999999999924`, 212.}]], "Output",
 ImageSize->{217, 212},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[12]=",
 CellID->9784607]
}, Open  ]],

Cell["\<\
ConePlot displays the cone to F with vertex c in {0,1}, using gr1 as an \
example\
\>", "Text",
 CellID->377488395],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ConePlot", "[", 
  RowBox[{"\[Nu]", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", " ", "gr1"}], "]"}]], "Input",
 CellLabel->"In[13]:=",
 CellID->184441371],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       $CellContext`j[1], 
       $CellContext`j[2], 
       $CellContext`j[3], $CellContext`c, 
       $CellContext`F[
        $CellContext`j[1]], 
       $CellContext`F[
        $CellContext`j[2]], 
       $CellContext`F[
        $CellContext`j[3]]}, {{{1, 2}, {3, 2}, {5, 6}, {7, 6}, {4, 5}, {4, 
       6}, {4, 7}}, Null}, {EdgeLabels -> {DirectedEdge[$CellContext`c, 
           $CellContext`F[
            $CellContext`j[1]]] -> $CellContext`\[Nu][
           $CellContext`j[1]], DirectedEdge[$CellContext`c, 
           $CellContext`F[
            $CellContext`j[3]]] -> $CellContext`\[Nu][
           $CellContext`j[3]], DirectedEdge[
           $CellContext`j[1], 
           $CellContext`j[2]] -> $CellContext`f, DirectedEdge[$CellContext`c, 
           $CellContext`F[
            $CellContext`j[2]]] -> $CellContext`\[Nu][
           $CellContext`j[2]], DirectedEdge[
           $CellContext`F[
            $CellContext`j[3]], 
           $CellContext`F[
            $CellContext`j[2]]] -> $CellContext`F[$CellContext`h], 
         DirectedEdge[
           $CellContext`F[
            $CellContext`j[1]], 
           $CellContext`F[
            $CellContext`j[2]]] -> $CellContext`F[$CellContext`f], 
         DirectedEdge[
           $CellContext`j[3], 
           $CellContext`j[2]] -> $CellContext`h}, EdgeLabelStyle -> {
         Directive[Background -> GrayLevel[1]]}, EdgeShapeFunction -> {{Black, 
          Arrow[#, {0.1, 0.1}]}& }, ImagePadding -> 20, ImageSize -> All, 
       VertexCoordinates -> {{0., 0.}, {1., 0.}, {1., 1.}, {2., 1.}, {2., 
        0.}, {3., 0.}, {3., 1.}}, VertexLabels -> {
         Placed["Name", Center]}, VertexShapeFunction -> {None}, VertexStyle -> {
         Directive[
          EdgeForm[], 
          GrayLevel[1]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
    GraphicsGroupBox[{{
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{0., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$1"], 
         InsetBox[
          FormBox[
           SubscriptBox["j", "1"], TraditionalForm], 
          DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{1., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$2"], 
         InsetBox[
          FormBox[
           SubscriptBox["j", "2"], TraditionalForm], 
          DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{1., 1.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$3"], 
         InsetBox[
          FormBox[
           SubscriptBox["j", "3"], TraditionalForm], 
          DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{2., 1.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$4"], 
         InsetBox[
          FormBox["c", TraditionalForm], 
          DynamicLocation["VertexID$4", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$4"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{2., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$5"], 
         InsetBox[
          FormBox[
           RowBox[{"F", "(", 
             SubscriptBox["j", "1"], ")"}], TraditionalForm], 
          DynamicLocation["VertexID$5", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$5"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{3., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$6"], 
         InsetBox[
          FormBox[
           RowBox[{"F", "(", 
             SubscriptBox["j", "2"], ")"}], TraditionalForm], 
          DynamicLocation["VertexID$6", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$6"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{3., 1.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$7"], 
         InsetBox[
          FormBox[
           RowBox[{"F", "(", 
             SubscriptBox["j", "3"], ")"}], TraditionalForm], 
          DynamicLocation["VertexID$7", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$7"]}, {
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 0.}, {1., 0.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$1"], 
        InsetBox[
         FormBox[
          StyleBox["f", 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$1", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{1., 1.}, {1., 0.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$2"], 
        InsetBox[
         FormBox[
          StyleBox["h", 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$2", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{2., 1.}, {2., 0.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$3"], 
        InsetBox[
         FormBox[
          StyleBox[
           RowBox[{"\[Nu]", "(", 
             SubscriptBox["j", "1"], ")"}], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$3", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{2., 1.}, {3., 0.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$4"], 
        InsetBox[
         FormBox[
          StyleBox[
           RowBox[{"\[Nu]", "(", 
             SubscriptBox["j", "2"], ")"}], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$4", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{2., 1.}, {3., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$5"], 
        InsetBox[
         FormBox[
          StyleBox[
           RowBox[{"\[Nu]", "(", 
             SubscriptBox["j", "3"], ")"}], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$5", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{2., 0.}, {3., 0.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$6"], 
        InsetBox[
         FormBox[
          StyleBox[
           RowBox[{"F", "(", "f", ")"}], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$6", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{3., 1.}, {3., 0.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$7"], 
        InsetBox[
         FormBox[
          StyleBox[
           RowBox[{"F", "(", "h", ")"}], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$7", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}}}], Typeset`data}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      2, Typeset`graph, Typeset`boxes], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {}},
      ImageSizeCache->{{19.485786437626892`, 
       347.5142135623731}, {-62.27021356237308, 56.958213562373125`}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{Typeset`data}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  ImagePadding->20,
  ImageSize->All]], "Output",
 ImageSize->{364, 155},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[13]=",
 CellID->335719769]
}, Open  ]],

Cell["This is an example of cone used in a pullback", "Text",
 CellID->188076258],

Cell["\<\
Another diagram in \[DoubleStruckCapitalJ] (just two objects)\
\>", "Text",
 CellID->269386035],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gr2", "=", 
  RowBox[{"CategoryPlot", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["j", "1"], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{
       SubscriptBox["j", "2"], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"2", ",", "0"}], "}"}]}]}], "}"}]}], "]"}]}]], "Input",
 CellLabel->"In[14]:=",
 CellID->19222465],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       $CellContext`j[1], 
       $CellContext`j[2]}, {}, {EdgeLabelStyle -> {
         Directive[Background -> GrayLevel[1]]}, EdgeShapeFunction -> {{Black, 
          Arrow[#, {0.1, 0.1}]}& }, ImagePadding -> 20, ImageSize -> All, 
       VertexCoordinates -> {{0., 0.}, {2., 0.}}, VertexLabels -> {
         Placed["Name", Center]}, VertexShapeFunction -> {None}, VertexStyle -> {
         Directive[
          EdgeForm[], 
          GrayLevel[1]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
    GraphicsGroupBox[{{
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{0., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$1"], 
         InsetBox[
          FormBox[
           SubscriptBox["j", "1"], TraditionalForm], 
          DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{2., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$2"], 
         InsetBox[
          FormBox[
           SubscriptBox["j", "2"], TraditionalForm], 
          DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"]}, {
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]]}}], Typeset`data}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      2, Typeset`graph, Typeset`boxes], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {}},
      ImageSizeCache->{{16.85384615384595, 
       125.5461538461536}, {-9.20000000000002, 4.799999999999979}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{Typeset`data}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  ImagePadding->20,
  ImageSize->{142.39999999999958`, 141.6}]], "Output",
 ImageSize->{146, 142},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[14]=",
 CellID->299075895]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ConePlot", "[", 
  RowBox[{"\[Nu]", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", " ", "gr2"}], "]"}]], "Input",
 CellLabel->"In[15]:=",
 CellID->11281613],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       $CellContext`j[1], 
       $CellContext`j[2], $CellContext`c, 
       $CellContext`F[
        $CellContext`j[1]], 
       $CellContext`F[
        $CellContext`j[2]]}, {{{3, 4}, {3, 5}}, Null}, {
      EdgeLabels -> {DirectedEdge[$CellContext`c, 
           $CellContext`F[
            $CellContext`j[1]]] -> $CellContext`\[Nu][
           $CellContext`j[1]], DirectedEdge[$CellContext`c, 
           $CellContext`F[
            $CellContext`j[2]]] -> $CellContext`\[Nu][
           $CellContext`j[2]]}, EdgeLabelStyle -> {
         Directive[Background -> GrayLevel[1]]}, EdgeShapeFunction -> {{Black, 
          Arrow[#, {0.1, 0.1}]}& }, ImagePadding -> 20, ImageSize -> All, 
       VertexCoordinates -> {{0., 0.}, {2., 0.}, {4., 1.}, {3., 0.}, {5., 
        0.}}, VertexLabels -> {
         Placed["Name", Center]}, VertexShapeFunction -> {None}, VertexStyle -> {
         Directive[
          EdgeForm[], 
          GrayLevel[1]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
    GraphicsGroupBox[{{
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{0., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$1"], 
         InsetBox[
          FormBox[
           SubscriptBox["j", "1"], TraditionalForm], 
          DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{2., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$2"], 
         InsetBox[
          FormBox[
           SubscriptBox["j", "2"], TraditionalForm], 
          DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{4., 1.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$3"], 
         InsetBox[
          FormBox["c", TraditionalForm], 
          DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{3., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$4"], 
         InsetBox[
          FormBox[
           RowBox[{"F", "(", 
             SubscriptBox["j", "1"], ")"}], TraditionalForm], 
          DynamicLocation["VertexID$4", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$4"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{5., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$5"], 
         InsetBox[
          FormBox[
           RowBox[{"F", "(", 
             SubscriptBox["j", "2"], ")"}], TraditionalForm], 
          DynamicLocation["VertexID$5", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$5"]}, {
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{4., 1.}, {3., 0.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$1"], 
        InsetBox[
         FormBox[
          StyleBox[
           RowBox[{"\[Nu]", "(", 
             SubscriptBox["j", "1"], ")"}], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$1", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{4., 1.}, {5., 0.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$2"], 
        InsetBox[
         FormBox[
          StyleBox[
           RowBox[{"\[Nu]", "(", 
             SubscriptBox["j", "2"], ")"}], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$2", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}}}], Typeset`data}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      2, Typeset`graph, Typeset`boxes], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {}},
      ImageSizeCache->{{20.900000000000002`, 
       346.09999999999985`}, {-38.855999999999995`, 35.58399999999999}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{Typeset`data}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  ImagePadding->20,
  ImageSize->All]], "Output",
 ImageSize->{364, 114},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[15]=",
 CellID->155061445]
}, Open  ]],

Cell["This is an example of cone used in a product", "Text",
 CellID->98619523],

Cell[TextData[{
 "Now a natural transformation \[Mu] between functors F and ",
 Cell[BoxData[
  RowBox[{
   SubsuperscriptBox["\[CapitalDelta]", "\[DoubleStruckCapitalC]", 
    "\[DoubleStruckCapitalJ]"], "[", "c", "]"}]]],
 "."
}], "Text",
 CellID->704831571],

Cell["\<\
This is the same as a cone from F to c (sometimes called a cocone)\
\>", "Text",
 CellID->804929414],

Cell[BoxData[
 RowBox[{"DefNaturalTransformation", "[", 
  RowBox[{"\[Mu]", ",", "F", ",", 
   RowBox[{
    SubsuperscriptBox["\[CapitalDelta]", "\[DoubleStruckCapitalC]", 
     "\[DoubleStruckCapitalJ]"], "[", "c", "]"}]}], "]"}]], "Input",
 CellLabel->"In[16]:=",
 CellID->438324561],

Cell["\<\
ConePlot displays the cone from F with vertex c in {0,1}, using gr1 as an \
example\
\>", "Text",
 CellID->437502999],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ConePlot", "[", 
  RowBox[{"\[Mu]", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", " ", "gr1"}], "]"}]], "Input",
 CellLabel->"In[17]:=",
 CellID->321190322],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       $CellContext`j[1], 
       $CellContext`j[2], 
       $CellContext`j[3], $CellContext`c, 
       $CellContext`F[
        $CellContext`j[1]], 
       $CellContext`F[
        $CellContext`j[2]], 
       $CellContext`F[
        $CellContext`j[3]]}, {{{1, 2}, {3, 2}, {5, 6}, {7, 6}, {5, 4}, {6, 
       4}, {7, 4}}, Null}, {EdgeLabels -> {DirectedEdge[
           $CellContext`F[
            $CellContext`j[3]], $CellContext`c] -> $CellContext`\[Mu][
           $CellContext`j[3]], DirectedEdge[
           $CellContext`F[
            $CellContext`j[1]], $CellContext`c] -> $CellContext`\[Mu][
           $CellContext`j[1]], DirectedEdge[
           $CellContext`j[1], 
           $CellContext`j[2]] -> $CellContext`f, DirectedEdge[
           $CellContext`F[
            $CellContext`j[2]], $CellContext`c] -> $CellContext`\[Mu][
           $CellContext`j[2]], DirectedEdge[
           $CellContext`F[
            $CellContext`j[3]], 
           $CellContext`F[
            $CellContext`j[2]]] -> $CellContext`F[$CellContext`h], 
         DirectedEdge[
           $CellContext`F[
            $CellContext`j[1]], 
           $CellContext`F[
            $CellContext`j[2]]] -> $CellContext`F[$CellContext`f], 
         DirectedEdge[
           $CellContext`j[3], 
           $CellContext`j[2]] -> $CellContext`h}, EdgeLabelStyle -> {
         Directive[Background -> GrayLevel[1]]}, EdgeShapeFunction -> {{Black, 
          Arrow[#, {0.1, 0.1}]}& }, ImagePadding -> 20, ImageSize -> All, 
       VertexCoordinates -> {{0., 0.}, {1., 0.}, {1., 1.}, {2., 1.}, {2., 
        0.}, {3., 0.}, {3., 1.}}, VertexLabels -> {
         Placed["Name", Center]}, VertexShapeFunction -> {None}, VertexStyle -> {
         Directive[
          EdgeForm[], 
          GrayLevel[1]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
    GraphicsGroupBox[{{
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{0., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$1"], 
         InsetBox[
          FormBox[
           SubscriptBox["j", "1"], TraditionalForm], 
          DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{1., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$2"], 
         InsetBox[
          FormBox[
           SubscriptBox["j", "2"], TraditionalForm], 
          DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{1., 1.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$3"], 
         InsetBox[
          FormBox[
           SubscriptBox["j", "3"], TraditionalForm], 
          DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{2., 1.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$4"], 
         InsetBox[
          FormBox["c", TraditionalForm], 
          DynamicLocation["VertexID$4", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$4"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{2., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$5"], 
         InsetBox[
          FormBox[
           RowBox[{"F", "(", 
             SubscriptBox["j", "1"], ")"}], TraditionalForm], 
          DynamicLocation["VertexID$5", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$5"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{3., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$6"], 
         InsetBox[
          FormBox[
           RowBox[{"F", "(", 
             SubscriptBox["j", "2"], ")"}], TraditionalForm], 
          DynamicLocation["VertexID$6", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$6"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{3., 1.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$7"], 
         InsetBox[
          FormBox[
           RowBox[{"F", "(", 
             SubscriptBox["j", "3"], ")"}], TraditionalForm], 
          DynamicLocation["VertexID$7", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$7"]}, {
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 0.}, {1., 0.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$1"], 
        InsetBox[
         FormBox[
          StyleBox["f", 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$1", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{1., 1.}, {1., 0.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$2"], 
        InsetBox[
         FormBox[
          StyleBox["h", 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$2", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{2., 0.}, {3., 0.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$3"], 
        InsetBox[
         FormBox[
          StyleBox[
           RowBox[{"F", "(", "f", ")"}], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$3", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{2., 0.}, {2., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$4"], 
        InsetBox[
         FormBox[
          StyleBox[
           RowBox[{"\[Mu]", "(", 
             SubscriptBox["j", "1"], ")"}], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$4", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{3., 0.}, {2., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$5"], 
        InsetBox[
         FormBox[
          StyleBox[
           RowBox[{"\[Mu]", "(", 
             SubscriptBox["j", "2"], ")"}], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$5", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{3., 1.}, {3., 0.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$6"], 
        InsetBox[
         FormBox[
          StyleBox[
           RowBox[{"F", "(", "h", ")"}], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$6", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{3., 1.}, {2., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$7"], 
        InsetBox[
         FormBox[
          StyleBox[
           RowBox[{"\[Mu]", "(", 
             SubscriptBox["j", "3"], ")"}], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$7", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}}}], Typeset`data}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      2, Typeset`graph, Typeset`boxes], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {}},
      ImageSizeCache->{{19.485786437626892`, 
       347.5142135623731}, {-62.27021356237308, 56.958213562373125`}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{Typeset`data}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  ImagePadding->20,
  ImageSize->All]], "Output",
 ImageSize->{364, 155},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[17]=",
 CellID->439911196]
}, Open  ]],

Cell["This is an example of cone used in a general colimit", "Text",
 CellID->447225548],

Cell["Using the gr2 diagram in \[DoubleStruckCapitalJ]", "Text",
 CellID->716525848],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ConePlot", "[", 
  RowBox[{"\[Mu]", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", " ", "gr2"}], "]"}]], "Input",
 CellLabel->"In[18]:=",
 CellID->553793785],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       $CellContext`j[1], 
       $CellContext`j[2], $CellContext`c, 
       $CellContext`F[
        $CellContext`j[1]], 
       $CellContext`F[
        $CellContext`j[2]]}, {{{4, 3}, {5, 3}}, Null}, {
      EdgeLabels -> {DirectedEdge[
           $CellContext`F[
            $CellContext`j[1]], $CellContext`c] -> $CellContext`\[Mu][
           $CellContext`j[1]], DirectedEdge[
           $CellContext`F[
            $CellContext`j[2]], $CellContext`c] -> $CellContext`\[Mu][
           $CellContext`j[2]]}, EdgeLabelStyle -> {
         Directive[Background -> GrayLevel[1]]}, EdgeShapeFunction -> {{Black, 
          Arrow[#, {0.1, 0.1}]}& }, ImagePadding -> 20, ImageSize -> All, 
       VertexCoordinates -> {{0., 0.}, {2., 0.}, {4., 1.}, {3., 0.}, {5., 
        0.}}, VertexLabels -> {
         Placed["Name", Center]}, VertexShapeFunction -> {None}, VertexStyle -> {
         Directive[
          EdgeForm[], 
          GrayLevel[1]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
    GraphicsGroupBox[{{
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{0., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$1"], 
         InsetBox[
          FormBox[
           SubscriptBox["j", "1"], TraditionalForm], 
          DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{2., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$2"], 
         InsetBox[
          FormBox[
           SubscriptBox["j", "2"], TraditionalForm], 
          DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{4., 1.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$3"], 
         InsetBox[
          FormBox["c", TraditionalForm], 
          DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{3., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$4"], 
         InsetBox[
          FormBox[
           RowBox[{"F", "(", 
             SubscriptBox["j", "1"], ")"}], TraditionalForm], 
          DynamicLocation["VertexID$4", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$4"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{5., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$5"], 
         InsetBox[
          FormBox[
           RowBox[{"F", "(", 
             SubscriptBox["j", "2"], ")"}], TraditionalForm], 
          DynamicLocation["VertexID$5", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$5"]}, {
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{3., 0.}, {4., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$1"], 
        InsetBox[
         FormBox[
          StyleBox[
           RowBox[{"\[Mu]", "(", 
             SubscriptBox["j", "1"], ")"}], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$1", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{5., 0.}, {4., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$2"], 
        InsetBox[
         FormBox[
          StyleBox[
           RowBox[{"\[Mu]", "(", 
             SubscriptBox["j", "2"], ")"}], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$2", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}}}], Typeset`data}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      2, Typeset`graph, Typeset`boxes], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {}},
      ImageSizeCache->{{20.900000000000002`, 
       346.09999999999985`}, {-38.855999999999995`, 35.58399999999999}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{Typeset`data}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  ImagePadding->20,
  ImageSize->All]], "Output",
 ImageSize->{364, 114},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[18]=",
 CellID->752081178]
}, Open  ]],

Cell["This is an example of cone used in a coproduct", "Text",
 CellID->59881741],

Cell["Consider again the previous pullback", "Text",
 CellID->128327878],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ConePlot", "[", 
  RowBox[{"\[Nu]", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", " ", "gr1"}], "]"}]], "Input",
 CellLabel->"In[20]:=",
 CellID->135974461],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       $CellContext`j[1], 
       $CellContext`j[2], 
       $CellContext`j[3], $CellContext`c, 
       $CellContext`F[
        $CellContext`j[1]], 
       $CellContext`F[
        $CellContext`j[2]], 
       $CellContext`F[
        $CellContext`j[3]]}, {{{1, 2}, {3, 2}, {5, 6}, {7, 6}, {4, 5}, {4, 
       6}, {4, 7}}, Null}, {EdgeLabels -> {DirectedEdge[$CellContext`c, 
           $CellContext`F[
            $CellContext`j[1]]] -> $CellContext`\[Nu][
           $CellContext`j[1]], DirectedEdge[$CellContext`c, 
           $CellContext`F[
            $CellContext`j[3]]] -> $CellContext`\[Nu][
           $CellContext`j[3]], DirectedEdge[
           $CellContext`j[1], 
           $CellContext`j[2]] -> $CellContext`f, DirectedEdge[$CellContext`c, 
           $CellContext`F[
            $CellContext`j[2]]] -> $CellContext`\[Nu][
           $CellContext`j[2]], DirectedEdge[
           $CellContext`F[
            $CellContext`j[3]], 
           $CellContext`F[
            $CellContext`j[2]]] -> $CellContext`F[$CellContext`h], 
         DirectedEdge[
           $CellContext`F[
            $CellContext`j[1]], 
           $CellContext`F[
            $CellContext`j[2]]] -> $CellContext`F[$CellContext`f], 
         DirectedEdge[
           $CellContext`j[3], 
           $CellContext`j[2]] -> $CellContext`h}, EdgeLabelStyle -> {
         Directive[Background -> GrayLevel[1]]}, EdgeShapeFunction -> {{Black, 
          Arrow[#, {0.1, 0.1}]}& }, ImagePadding -> 20, ImageSize -> All, 
       VertexCoordinates -> {{0., 0.}, {1., 0.}, {1., 1.}, {2., 1.}, {2., 
        0.}, {3., 0.}, {3., 1.}}, VertexLabels -> {
         Placed["Name", Center]}, VertexShapeFunction -> {None}, VertexStyle -> {
         Directive[
          EdgeForm[], 
          GrayLevel[1]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
    GraphicsGroupBox[{{
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{0., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$1"], 
         InsetBox[
          FormBox[
           SubscriptBox["j", "1"], TraditionalForm], 
          DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{1., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$2"], 
         InsetBox[
          FormBox[
           SubscriptBox["j", "2"], TraditionalForm], 
          DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{1., 1.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$3"], 
         InsetBox[
          FormBox[
           SubscriptBox["j", "3"], TraditionalForm], 
          DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{2., 1.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$4"], 
         InsetBox[
          FormBox["c", TraditionalForm], 
          DynamicLocation["VertexID$4", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$4"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{2., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$5"], 
         InsetBox[
          FormBox[
           RowBox[{"F", "(", 
             SubscriptBox["j", "1"], ")"}], TraditionalForm], 
          DynamicLocation["VertexID$5", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$5"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{3., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$6"], 
         InsetBox[
          FormBox[
           RowBox[{"F", "(", 
             SubscriptBox["j", "2"], ")"}], TraditionalForm], 
          DynamicLocation["VertexID$6", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$6"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{3., 1.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$7"], 
         InsetBox[
          FormBox[
           RowBox[{"F", "(", 
             SubscriptBox["j", "3"], ")"}], TraditionalForm], 
          DynamicLocation["VertexID$7", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$7"]}, {
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 0.}, {1., 0.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$1"], 
        InsetBox[
         FormBox[
          StyleBox["f", 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$1", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{1., 1.}, {1., 0.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$2"], 
        InsetBox[
         FormBox[
          StyleBox["h", 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$2", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{2., 1.}, {2., 0.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$3"], 
        InsetBox[
         FormBox[
          StyleBox[
           RowBox[{"\[Nu]", "(", 
             SubscriptBox["j", "1"], ")"}], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$3", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{2., 1.}, {3., 0.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$4"], 
        InsetBox[
         FormBox[
          StyleBox[
           RowBox[{"\[Nu]", "(", 
             SubscriptBox["j", "2"], ")"}], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$4", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{2., 1.}, {3., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$5"], 
        InsetBox[
         FormBox[
          StyleBox[
           RowBox[{"\[Nu]", "(", 
             SubscriptBox["j", "3"], ")"}], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$5", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{2., 0.}, {3., 0.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$6"], 
        InsetBox[
         FormBox[
          StyleBox[
           RowBox[{"F", "(", "f", ")"}], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$6", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{3., 1.}, {3., 0.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$7"], 
        InsetBox[
         FormBox[
          StyleBox[
           RowBox[{"F", "(", "h", ")"}], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$7", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}}}], Typeset`data}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      2, Typeset`graph, Typeset`boxes], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {}},
      ImageSizeCache->{{19.485786437626892`, 
       347.5142135623731}, {-62.27021356237308, 56.958213562373125`}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{Typeset`data}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  ImagePadding->20,
  ImageSize->All]], "Output",
 ImageSize->{364, 155},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[20]=",
 CellID->163390584]
}, Open  ]],

Cell["\<\
WildCats confirms that the diagram on the right is commutative \
\>", "Text",
 CellID->7659922],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NT", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"F", "[", "f", "]"}], " ", 
     UnderscriptBox["\[EmptyCircle]", "\[DoubleStruckCapitalC]"], "  ", 
     RowBox[{"\[Nu]", "[", 
      SubscriptBox["j", "1"], "]"}]}], ",", "\[Nu]"}], "]"}], "==", 
  RowBox[{"NT", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"F", "[", "h", "]"}], " ", 
     UnderscriptBox["\[EmptyCircle]", "\[DoubleStruckCapitalC]"], "  ", 
     RowBox[{"\[Nu]", "[", 
      SubscriptBox["j", "3"], "]"}]}], ",", "\[Nu]"}], "]"}], "==", 
  RowBox[{"\[Nu]", "[", 
   SubscriptBox["j", "2"], "]"}]}]], "Input",
 CellLabel->"In[22]:=",
 CellID->368386262],

Cell[BoxData["True"], "Output",
 ImageSize->{32, 15},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[22]=",
 CellID->93945848]
}, Open  ]],

Cell["Let's see another example of a cocone", "Text",
 CellID->512974978],

Cell[TextData[{
 "Define a functor G from ",
 Cell[BoxData[
  SuperscriptBox["\[DoubleStruckCapitalJ]", "OP"]]],
 "  to ",
 "\[DoubleStruckCapitalC]"
}], "Text",
 CellID->493515811],

Cell[BoxData[
 RowBox[{"DefFunctor", "[", 
  RowBox[{"G", ",", 
   SuperscriptBox["\[DoubleStruckCapitalJ]", "OP"], ",", 
   "\[DoubleStruckCapitalC]"}], "]"}]], "Input",
 CellID->73879362],

Cell["Define a cone from G to c", "Text",
 CellID->11442003],

Cell[BoxData[
 RowBox[{"DefNaturalTransformation", "[", 
  RowBox[{"\[Tau]", ",", "G", ",", 
   RowBox[{
    SubsuperscriptBox["\[CapitalDelta]", "\[DoubleStruckCapitalC]", 
     SuperscriptBox["\[DoubleStruckCapitalJ]", "OP"]], "[", "c", "]"}]}], 
  "]"}]], "Input",
 CellLabel->"In[24]:=",
 CellID->226490496],

Cell[TextData[{
 "Consider diagram gr1 in ",
 Cell[BoxData[
  SuperscriptBox["\[DoubleStruckCapitalJ]", "OP"]]]
}], "Text",
 CellID->160313225],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"OPP", "[", "gr1", "]"}]], "Input",
 CellLabel->"In[28]:=",
 CellID->767156244],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       $CellContext`j[1], 
       $CellContext`j[2], 
       $CellContext`j[3]}, {
       SparseArray[
       Automatic, {3, 3}, 0, {1, {{0, 0, 2, 2}, {{1}, {3}}}, Pattern}], 
       Null}, {EdgeLabels -> {DirectedEdge[
           $CellContext`j[2], 
           $CellContext`j[3]] -> $CellContext`h, DirectedEdge[
           $CellContext`j[2], 
           $CellContext`j[1]] -> $CellContext`f}, EdgeLabelStyle -> {
         Directive[Background -> GrayLevel[1]]}, EdgeShapeFunction -> {{Black, 
          Arrow[#, {0.1, 0.1}]}& }, ImagePadding -> 20, ImageSize -> All, 
       VertexCoordinates -> {{0., 0.}, {1., 0.}, {1., 1.}}, VertexLabels -> {
         Placed["Name", Center]}, VertexShapeFunction -> {None}, VertexStyle -> {
         Directive[
          EdgeForm[], 
          GrayLevel[1]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
    GraphicsGroupBox[{{
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{0., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$1"], 
         InsetBox[
          FormBox[
           SubscriptBox["j", "1"], TraditionalForm], 
          DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{1., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$2"], 
         InsetBox[
          FormBox[
           SubscriptBox["j", "2"], TraditionalForm], 
          DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{1., 1.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$3"], 
         InsetBox[
          FormBox[
           SubscriptBox["j", "3"], TraditionalForm], 
          DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"]}, {
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{1., 0.}, {0., 0.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$1"], 
        InsetBox[
         FormBox[
          StyleBox["f", 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$1", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{1., 0.}, {1., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$2"], 
        InsetBox[
         FormBox[
          StyleBox["h", 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$2", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}}}], Typeset`data}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      2, Typeset`graph, Typeset`boxes], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {}},
      ImageSizeCache->{{16.90117105301146, 
       149.4988289469884}, {-69.99882894698848, 65.59882894698848}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{Typeset`data}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  ImagePadding->20,
  ImageSize->{166.39999999999986`, 165.6}]], "Output",
 ImageSize->{170, 166},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[28]=",
 CellID->77225326]
}, Open  ]],

Cell["The following is a cocone used in a pushforward", "Text",
 CellID->121352722],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ConePlot", "[", 
  RowBox[{"\[Tau]", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", " ", 
   RowBox[{"OPP", "[", "gr1", "]"}]}], "]"}]], "Input",
 CellLabel->"In[29]:=",
 CellID->3591986],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       $CellContext`j[1], 
       $CellContext`j[2], 
       $CellContext`j[3], $CellContext`c, 
       $CellContext`G[
        $CellContext`j[1]], 
       $CellContext`G[
        $CellContext`j[2]], 
       $CellContext`G[
        $CellContext`j[3]]}, {{{2, 1}, {2, 3}, {6, 5}, {6, 7}, {5, 4}, {6, 
       4}, {7, 4}}, Null}, {EdgeLabels -> {DirectedEdge[
           $CellContext`G[
            $CellContext`j[2]], $CellContext`c] -> $CellContext`\[Tau][
           $CellContext`j[2]], DirectedEdge[
           $CellContext`G[
            $CellContext`j[1]], $CellContext`c] -> $CellContext`\[Tau][
           $CellContext`j[1]], DirectedEdge[
           $CellContext`G[
            $CellContext`j[2]], 
           $CellContext`G[
            $CellContext`j[1]]] -> $CellContext`G[$CellContext`f], 
         DirectedEdge[
           $CellContext`j[2], 
           $CellContext`j[3]] -> $CellContext`h, DirectedEdge[
           $CellContext`G[
            $CellContext`j[3]], $CellContext`c] -> $CellContext`\[Tau][
           $CellContext`j[3]], DirectedEdge[
           $CellContext`j[2], 
           $CellContext`j[1]] -> $CellContext`f, DirectedEdge[
           $CellContext`G[
            $CellContext`j[2]], 
           $CellContext`G[
            $CellContext`j[3]]] -> $CellContext`G[$CellContext`h]}, 
       EdgeLabelStyle -> {
         Directive[Background -> GrayLevel[1]]}, EdgeShapeFunction -> {{Black, 
          Arrow[#, {0.1, 0.1}]}& }, ImagePadding -> 20, ImageSize -> All, 
       VertexCoordinates -> {{0., 0.}, {1., 0.}, {1., 1.}, {2., 1.}, {2., 
        0.}, {3., 0.}, {3., 1.}}, VertexLabels -> {
         Placed["Name", Center]}, VertexShapeFunction -> {None}, VertexStyle -> {
         Directive[
          EdgeForm[], 
          GrayLevel[1]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
    GraphicsGroupBox[{{
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{0., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$1"], 
         InsetBox[
          FormBox[
           SubscriptBox["j", "1"], TraditionalForm], 
          DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{1., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$2"], 
         InsetBox[
          FormBox[
           SubscriptBox["j", "2"], TraditionalForm], 
          DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{1., 1.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$3"], 
         InsetBox[
          FormBox[
           SubscriptBox["j", "3"], TraditionalForm], 
          DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{2., 1.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$4"], 
         InsetBox[
          FormBox["c", TraditionalForm], 
          DynamicLocation["VertexID$4", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$4"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{2., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$5"], 
         InsetBox[
          FormBox[
           RowBox[{"G", "(", 
             SubscriptBox["j", "1"], ")"}], TraditionalForm], 
          DynamicLocation["VertexID$5", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$5"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{3., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$6"], 
         InsetBox[
          FormBox[
           RowBox[{"G", "(", 
             SubscriptBox["j", "2"], ")"}], TraditionalForm], 
          DynamicLocation["VertexID$6", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$6"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{3., 1.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$7"], 
         InsetBox[
          FormBox[
           RowBox[{"G", "(", 
             SubscriptBox["j", "3"], ")"}], TraditionalForm], 
          DynamicLocation["VertexID$7", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$7"]}, {
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{1., 0.}, {0., 0.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$1"], 
        InsetBox[
         FormBox[
          StyleBox["f", 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$1", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{1., 0.}, {1., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$2"], 
        InsetBox[
         FormBox[
          StyleBox["h", 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$2", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{2., 0.}, {2., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$3"], 
        InsetBox[
         FormBox[
          StyleBox[
           RowBox[{"\[Tau]", "(", 
             SubscriptBox["j", "1"], ")"}], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$3", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{3., 0.}, {2., 0.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$4"], 
        InsetBox[
         FormBox[
          StyleBox[
           RowBox[{"G", "(", "f", ")"}], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$4", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{3., 0.}, {3., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$5"], 
        InsetBox[
         FormBox[
          StyleBox[
           RowBox[{"G", "(", "h", ")"}], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$5", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{3., 0.}, {2., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$6"], 
        InsetBox[
         FormBox[
          StyleBox[
           RowBox[{"\[Tau]", "(", 
             SubscriptBox["j", "2"], ")"}], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$6", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{3., 1.}, {2., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$7"], 
        InsetBox[
         FormBox[
          StyleBox[
           RowBox[{"\[Tau]", "(", 
             SubscriptBox["j", "3"], ")"}], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$7", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}}}], Typeset`data}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      2, Typeset`graph, Typeset`boxes], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {}},
      ImageSizeCache->{{19.485786437626892`, 
       347.0142135623731}, {-62.27021356237308, 56.958213562373125`}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{Typeset`data}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  ImagePadding->20,
  ImageSize->All]], "Output",
 ImageSize->{364, 155},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[29]=",
 CellID->254075265]
}, Open  ]],

Cell["\<\
WildCats confirms that the diagram on the right is commutative \
\>", "Text",
 CellID->157521490],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NT", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Tau]", "[", 
      SubscriptBox["j", "1"], "]"}], " ", 
     UnderscriptBox["\[EmptyCircle]", "\[DoubleStruckCapitalC]"], "  ", 
     RowBox[{"G", "[", "f", "]"}]}], ",", "\[Tau]"}], "]"}], "==", 
  RowBox[{"NT", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Tau]", "[", 
      SubscriptBox["j", "3"], "]"}], " ", 
     UnderscriptBox["\[EmptyCircle]", "\[DoubleStruckCapitalC]"], "  ", 
     RowBox[{"G", "[", "h", "]"}]}], ",", "\[Tau]"}], "]"}], "\[Equal]", 
  RowBox[{"\[Tau]", "[", 
   SubscriptBox["j", "2"], "]"}]}]], "Input",
 CellLabel->"In[30]:=",
 CellID->723712217],

Cell[BoxData["True"], "Output",
 ImageSize->{32, 15},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[30]=",
 CellID->635620573]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Defining Limits (coming soon)", "Section",
 CellID->3187780],

Cell["coming soon", "Text",
 CellID->471580599]
}, Closed]],

Cell[CellGroupData[{

Cell["MORE ABOUT", "TutorialMoreAboutSection",
 CellID->961285135],

Cell[TextData[ButtonBox["WildCats Guide",
 BaseStyle->"Link",
 ButtonData->"paclet:WildCats/guide/WildCats"]], "TutorialMoreAbout",
 CellID->112930206]
}, Open  ]]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 730},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"Cones and Limits - Wolfram Mathematica",
TaggingRules->{
 "ModificationHighlight" -> False, 
  "Metadata" -> {
   "built" -> "{2014, 3, 6, 20, 41, 18.6258883}", "context" -> "WildCats`", 
    "keywords" -> {}, "index" -> True, "label" -> "Wild Cats Tutorial", 
    "language" -> "en", "paclet" -> "WildCats", "status" -> "None", "summary" -> 
    "This terminates the current Mathematica session and starts a new clean \
session (recommended for troubleshooting) This loads the package:", 
    "synonyms" -> {}, "title" -> "Cones and Limits", "type" -> "Tutorial", 
    "uri" -> "WildCats/tutorial/Cones and Limits"}, "LinkTrails" -> "", 
  "SearchTextTranslated" -> ""},
FrontEndVersion->"8.0 for Microsoft Windows (64-bit) (February 23, 2011)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"], 
   Cell[
    StyleData["TutorialMoreAboutSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["RelatedTutorialsSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["TutorialRelatedLinksSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}]}, Visible -> False, 
  FrontEndVersion -> "8.0 for Microsoft Windows (64-bit) (February 23, 2011)",
   StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[609, 21, 78, 1, 70, "TutorialColorBar"],
Cell[690, 24, 179, 5, 70, "LinkTrail"],
Cell[872, 31, 2349, 53, 70, "AnchorBarGrid",
 CellID->1],
Cell[CellGroupData[{
Cell[3246, 88, 53, 1, 70, "Title",
 CellID->509267359],
Cell[3302, 91, 171, 6, 70, "Text",
 CellID->12172402],
Cell[3476, 99, 69, 1, 70, "Text",
 CellID->121457497],
Cell[3548, 102, 73, 2, 70, "Input",
 CellID->309037897],
Cell[3624, 106, 60, 1, 70, "Text",
 CellID->1825449234],
Cell[CellGroupData[{
Cell[3709, 111, 117, 3, 70, "Input",
 CellID->339579782],
Cell[3829, 116, 878, 22, 70, "Print",
 CellID->130510647]
}, Open  ]],
Cell[CellGroupData[{
Cell[4744, 143, 53, 1, 70, "Section",
 CellID->139694517],
Cell[4800, 146, 128, 4, 70, "Text",
 CellID->1534169418],
Cell[4931, 152, 76, 1, 70, "Text",
 CellID->64255456],
Cell[5010, 155, 883, 28, 70, "DefinitionBox",
 CellID->2096742444],
Cell[5896, 185, 49, 1, 70, "Caption",
 CellID->1891092685],
Cell[5948, 188, 144, 4, 70, "Text",
 CellID->880910032],
Cell[6095, 194, 301, 8, 70, "Input",
 CellID->195599976],
Cell[6399, 204, 396, 11, 70, "Input",
 CellID->118135242],
Cell[6798, 217, 125, 4, 70, "Text",
 CellID->26284519],
Cell[6926, 223, 221, 5, 70, "Input",
 CellID->463198528],
Cell[7150, 230, 86, 1, 70, "Text",
 CellID->409587394],
Cell[7239, 233, 130, 4, 70, "Text",
 CellID->273776],
Cell[7372, 239, 280, 8, 70, "Input",
 CellID->574245174],
Cell[7655, 249, 112, 2, 70, "Text",
 CellID->121368428],
Cell[7770, 253, 186, 6, 70, "Input",
 CellID->837220],
Cell[7959, 261, 313, 14, 70, "Text",
 CellID->731935552],
Cell[CellGroupData[{
Cell[8297, 279, 329, 11, 70, "Input",
 CellID->104261775],
Cell[8629, 292, 223, 7, 36, "Output",
 CellID->122344855]
}, Open  ]],
Cell[8867, 302, 78, 1, 70, "Text",
 CellID->689126331],
Cell[8948, 305, 150, 4, 70, "Input",
 CellID->130948741],
Cell[9101, 311, 87, 1, 70, "Text",
 CellID->191045113],
Cell[9191, 314, 398, 11, 70, "Input",
 CellID->78288731],
Cell[9592, 327, 267, 8, 70, "Text",
 CellID->29382298],
Cell[9862, 337, 74, 1, 70, "Text",
 CellID->239000443],
Cell[9939, 340, 284, 7, 70, "Input",
 CellID->39546289],
Cell[10226, 349, 88, 1, 70, "Text",
 CellID->1035064667],
Cell[CellGroupData[{
Cell[10339, 354, 786, 25, 70, "Input",
 CellID->24129722],
Cell[11128, 381, 4448, 115, 70, "Output",
 CellID->9784607]
}, Open  ]],
Cell[15591, 499, 125, 4, 70, "Text",
 CellID->377488395],
Cell[CellGroupData[{
Cell[15741, 507, 198, 6, 70, "Input",
 CellID->184441371],
Cell[15942, 515, 10272, 267, 70, "Output",
 CellID->335719769]
}, Open  ]],
Cell[26229, 785, 81, 1, 70, "Text",
 CellID->188076258],
Cell[26313, 788, 105, 3, 70, "Text",
 CellID->269386035],
Cell[CellGroupData[{
Cell[26443, 795, 462, 16, 70, "Input",
 CellID->19222465],
Cell[26908, 813, 2729, 71, 70, "Output",
 CellID->299075895]
}, Open  ]],
Cell[CellGroupData[{
Cell[29674, 889, 197, 6, 70, "Input",
 CellID->11281613],
Cell[29874, 897, 5909, 154, 70, "Output",
 CellID->155061445]
}, Open  ]],
Cell[35798, 1054, 79, 1, 70, "Text",
 CellID->98619523],
Cell[35880, 1057, 260, 8, 70, "Text",
 CellID->704831571],
Cell[36143, 1067, 110, 3, 70, "Text",
 CellID->804929414],
Cell[36256, 1072, 285, 7, 70, "Input",
 CellID->438324561],
Cell[36544, 1081, 127, 4, 70, "Text",
 CellID->437502999],
Cell[CellGroupData[{
Cell[36696, 1089, 198, 6, 70, "Input",
 CellID->321190322],
Cell[36897, 1097, 10272, 267, 70, "Output",
 CellID->439911196]
}, Open  ]],
Cell[47184, 1367, 88, 1, 70, "Text",
 CellID->447225548],
Cell[47275, 1370, 84, 1, 70, "Text",
 CellID->716525848],
Cell[CellGroupData[{
Cell[47384, 1375, 198, 6, 70, "Input",
 CellID->553793785],
Cell[47585, 1383, 5909, 154, 70, "Output",
 CellID->752081178]
}, Open  ]],
Cell[53509, 1540, 81, 1, 70, "Text",
 CellID->59881741],
Cell[53593, 1543, 72, 1, 70, "Text",
 CellID->128327878],
Cell[CellGroupData[{
Cell[53690, 1548, 198, 6, 70, "Input",
 CellID->135974461],
Cell[53891, 1556, 10272, 267, 70, "Output",
 CellID->163390584]
}, Open  ]],
Cell[64178, 1826, 105, 3, 70, "Text",
 CellID->7659922],
Cell[CellGroupData[{
Cell[64308, 1833, 654, 19, 70, "Input",
 CellID->368386262],
Cell[64965, 1854, 161, 5, 36, "Output",
 CellID->93945848]
}, Open  ]],
Cell[65141, 1862, 73, 1, 70, "Text",
 CellID->512974978],
Cell[65217, 1865, 181, 7, 70, "Text",
 CellID->493515811],
Cell[65401, 1874, 189, 5, 70, "Input",
 CellID->73879362],
Cell[65593, 1881, 60, 1, 70, "Text",
 CellID->11442003],
Cell[65656, 1884, 311, 8, 70, "Input",
 CellID->226490496],
Cell[65970, 1894, 143, 5, 70, "Text",
 CellID->160313225],
Cell[CellGroupData[{
Cell[66138, 1903, 102, 3, 70, "Input",
 CellID->767156244],
Cell[66243, 1908, 4522, 117, 70, "Output",
 CellID->77225326]
}, Open  ]],
Cell[70780, 2028, 83, 1, 70, "Text",
 CellID->121352722],
Cell[CellGroupData[{
Cell[70888, 2033, 228, 7, 70, "Input",
 CellID->3591986],
Cell[71119, 2042, 10276, 267, 70, "Output",
 CellID->254075265]
}, Open  ]],
Cell[81410, 2312, 107, 3, 70, "Text",
 CellID->157521490],
Cell[CellGroupData[{
Cell[81542, 2319, 665, 19, 70, "Input",
 CellID->723712217],
Cell[82210, 2340, 162, 5, 36, "Output",
 CellID->635620573]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[82421, 2351, 66, 1, 70, "Section",
 CellID->3187780],
Cell[82490, 2354, 47, 1, 70, "Text",
 CellID->471580599]
}, Closed]],
Cell[CellGroupData[{
Cell[82574, 2360, 66, 1, 70, "TutorialMoreAboutSection",
 CellID->961285135],
Cell[82643, 2363, 151, 3, 70, "TutorialMoreAbout",
 CellID->112930206]
}, Open  ]]
}, Open  ]],
Cell[82821, 2370, 23, 0, 70, "FooterCell"]
}
]
*)

(* End of internal cache information *)

